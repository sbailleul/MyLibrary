/* 
 * Library API
 *
 * Through this API you can access authors and their books
 *
 * OpenAPI spec version: 1.0
 * Contact: bailleul.sacha@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ConstructorInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ConstructorInfoTests
    {
        // TODO uncomment below to declare an instance variable for ConstructorInfo
        //private ConstructorInfo instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ConstructorInfo
            //instance = new ConstructorInfo();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ConstructorInfo
        /// </summary>
        [Test]
        public void ConstructorInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ConstructorInfo
            //Assert.IsInstanceOfType<ConstructorInfo> (instance, "variable 'instance' is a ConstructorInfo");
        }


        /// <summary>
        /// Test the property 'MemberType'
        /// </summary>
        [Test]
        public void MemberTypeTest()
        {
            // TODO unit test for the property 'MemberType'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Test]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'MethodImplementationFlags'
        /// </summary>
        [Test]
        public void MethodImplementationFlagsTest()
        {
            // TODO unit test for the property 'MethodImplementationFlags'
        }
        /// <summary>
        /// Test the property 'CallingConvention'
        /// </summary>
        [Test]
        public void CallingConventionTest()
        {
            // TODO unit test for the property 'CallingConvention'
        }
        /// <summary>
        /// Test the property 'IsAbstract'
        /// </summary>
        [Test]
        public void IsAbstractTest()
        {
            // TODO unit test for the property 'IsAbstract'
        }
        /// <summary>
        /// Test the property 'IsConstructor'
        /// </summary>
        [Test]
        public void IsConstructorTest()
        {
            // TODO unit test for the property 'IsConstructor'
        }
        /// <summary>
        /// Test the property 'IsFinal'
        /// </summary>
        [Test]
        public void IsFinalTest()
        {
            // TODO unit test for the property 'IsFinal'
        }
        /// <summary>
        /// Test the property 'IsHideBySig'
        /// </summary>
        [Test]
        public void IsHideBySigTest()
        {
            // TODO unit test for the property 'IsHideBySig'
        }
        /// <summary>
        /// Test the property 'IsSpecialName'
        /// </summary>
        [Test]
        public void IsSpecialNameTest()
        {
            // TODO unit test for the property 'IsSpecialName'
        }
        /// <summary>
        /// Test the property 'IsStatic'
        /// </summary>
        [Test]
        public void IsStaticTest()
        {
            // TODO unit test for the property 'IsStatic'
        }
        /// <summary>
        /// Test the property 'IsVirtual'
        /// </summary>
        [Test]
        public void IsVirtualTest()
        {
            // TODO unit test for the property 'IsVirtual'
        }
        /// <summary>
        /// Test the property 'IsAssembly'
        /// </summary>
        [Test]
        public void IsAssemblyTest()
        {
            // TODO unit test for the property 'IsAssembly'
        }
        /// <summary>
        /// Test the property 'IsFamily'
        /// </summary>
        [Test]
        public void IsFamilyTest()
        {
            // TODO unit test for the property 'IsFamily'
        }
        /// <summary>
        /// Test the property 'IsFamilyAndAssembly'
        /// </summary>
        [Test]
        public void IsFamilyAndAssemblyTest()
        {
            // TODO unit test for the property 'IsFamilyAndAssembly'
        }
        /// <summary>
        /// Test the property 'IsFamilyOrAssembly'
        /// </summary>
        [Test]
        public void IsFamilyOrAssemblyTest()
        {
            // TODO unit test for the property 'IsFamilyOrAssembly'
        }
        /// <summary>
        /// Test the property 'IsPrivate'
        /// </summary>
        [Test]
        public void IsPrivateTest()
        {
            // TODO unit test for the property 'IsPrivate'
        }
        /// <summary>
        /// Test the property 'IsPublic'
        /// </summary>
        [Test]
        public void IsPublicTest()
        {
            // TODO unit test for the property 'IsPublic'
        }
        /// <summary>
        /// Test the property 'IsConstructedGenericMethod'
        /// </summary>
        [Test]
        public void IsConstructedGenericMethodTest()
        {
            // TODO unit test for the property 'IsConstructedGenericMethod'
        }
        /// <summary>
        /// Test the property 'IsGenericMethod'
        /// </summary>
        [Test]
        public void IsGenericMethodTest()
        {
            // TODO unit test for the property 'IsGenericMethod'
        }
        /// <summary>
        /// Test the property 'IsGenericMethodDefinition'
        /// </summary>
        [Test]
        public void IsGenericMethodDefinitionTest()
        {
            // TODO unit test for the property 'IsGenericMethodDefinition'
        }
        /// <summary>
        /// Test the property 'ContainsGenericParameters'
        /// </summary>
        [Test]
        public void ContainsGenericParametersTest()
        {
            // TODO unit test for the property 'ContainsGenericParameters'
        }
        /// <summary>
        /// Test the property 'MethodHandle'
        /// </summary>
        [Test]
        public void MethodHandleTest()
        {
            // TODO unit test for the property 'MethodHandle'
        }
        /// <summary>
        /// Test the property 'IsSecurityCritical'
        /// </summary>
        [Test]
        public void IsSecurityCriticalTest()
        {
            // TODO unit test for the property 'IsSecurityCritical'
        }
        /// <summary>
        /// Test the property 'IsSecuritySafeCritical'
        /// </summary>
        [Test]
        public void IsSecuritySafeCriticalTest()
        {
            // TODO unit test for the property 'IsSecuritySafeCritical'
        }
        /// <summary>
        /// Test the property 'IsSecurityTransparent'
        /// </summary>
        [Test]
        public void IsSecurityTransparentTest()
        {
            // TODO unit test for the property 'IsSecurityTransparent'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'DeclaringType'
        /// </summary>
        [Test]
        public void DeclaringTypeTest()
        {
            // TODO unit test for the property 'DeclaringType'
        }
        /// <summary>
        /// Test the property 'ReflectedType'
        /// </summary>
        [Test]
        public void ReflectedTypeTest()
        {
            // TODO unit test for the property 'ReflectedType'
        }
        /// <summary>
        /// Test the property 'Module'
        /// </summary>
        [Test]
        public void ModuleTest()
        {
            // TODO unit test for the property 'Module'
        }
        /// <summary>
        /// Test the property 'CustomAttributes'
        /// </summary>
        [Test]
        public void CustomAttributesTest()
        {
            // TODO unit test for the property 'CustomAttributes'
        }
        /// <summary>
        /// Test the property 'IsCollectible'
        /// </summary>
        [Test]
        public void IsCollectibleTest()
        {
            // TODO unit test for the property 'IsCollectible'
        }
        /// <summary>
        /// Test the property 'MetadataToken'
        /// </summary>
        [Test]
        public void MetadataTokenTest()
        {
            // TODO unit test for the property 'MetadataToken'
        }

    }

}
